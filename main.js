!function(){"use strict";class e{constructor(e,t){let{id:s,isLiked:r,name:n,link:i,handleImageClick:o,handleRemoveCardClick:a,handleLikeIcon:l}=e;this._id=s,this._name=n,this._link=i,this._isLiked=r,this._cardSelector=t,this._handleImageClick=o,this._handleRemoveCardClick=a,this._handleLikeIcon=l}getId(){return this._id}setLikeStatus(e){this._isLiked=e}getLikeStatus(){return this._isLiked}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon(this).then((()=>{this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}))})),this.cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleRemoveCardClick()}))}handleRemoveCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this.cardImageEl=this._cardElement.querySelector(".card__image"),this.cardTitleEl=this._cardElement.querySelector(".card__title"),this.cardImageEl.src=this._link,this.cardImageEl.alt=`Photo of ${this._name}`,this.cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}const t={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"popup__error_visible"};class s{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=[...t.querySelectorAll(this._inputSelector)],this._submitButton=t.querySelector(this._submitButtonSelector),this._element=t}_showInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e,document.querySelector(`#${e.id}-error`));this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._element),this.toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){console.log(this),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{console.log(this),"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends r{constructor(e,t,s){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setLoadingText(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}setSubmitAction(e){this._handleFormSubmit=e}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e=this._popupForm.querySelectorAll(".form__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}const i=document.querySelector("#profile-picture-modal"),o=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#preview-image-modal"),c=document.querySelector(".profile__image"),d=(l.querySelector(".modal__image"),l.querySelector(".modal__title"),document.querySelector("#add-card-modal")),h=document.querySelector(".profile__title"),u=document.querySelector(".profile__description"),_=document.querySelector("#profile-title-input"),m=document.querySelector("#profile-description-input"),p=a.querySelector(".modal__form"),E=d.querySelector(".modal__form"),v=i.querySelector(".modal__form"),S=document.querySelector(".profile__add-button"),L=document.querySelector(".profile__button-avatar"),b=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:"7df31549-2772-46fa-8dab-555ea4e32993"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}usersInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}profileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}userAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7df31549-2772-46fa-8dab-555ea4e32993","Content-Type":"application/json"}}),f=new s(t,E),k=new s(t,p),g=new s(t,v);f.enableValidation(),k.enableValidation(),g.enableValidation();const y=new n("#add-card-modal",(function(e){y.setLoadingText(!0),b.addCard(e).then((e=>{const t=$(e);j.addItem(t),E.reset(),y.close()})).catch((e=>{console.error(e)})).finally((()=>{y.setLoadingText(!1)}))}));y.setEventListeners(),S.addEventListener("click",(()=>{f.toggleButtonState(),y.open()}));const C=new n("#profile-edit-modal",(function(e){let{name:t,job:s}=e;C.setLoadingText(!0),b.profileInfo({name:t,about:s}).then((e=>{B.setUserInfo(e.name,e.about),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setLoadingText(!1)}))}));C.setEventListeners(),o.addEventListener("click",(()=>{const e=B.getUserInfo();_.value=e.name,m.value=e.job,C.open()}));const I=new n("#profile-picture-modal",(function(e){I.setLoadingText(!0),b.userAvatar(e).then((()=>{c.src=e.link})).catch((e=>{console.error(e)})).finally((()=>{I.setLoadingText(!1)}))}));I.setEventListeners(),L.addEventListener("click",(()=>{I.open(),g.toggleButtonState()}));const q=new n("#remove-card-modal");q.setEventListeners();const x=new class extends r{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._titleElement=this._popupElement.querySelector(".modal__title")}open(e){this._imageElement.src=e.link,this._imageElement.alt=`Photo of ${e.link}`,this._titleElement.textContent=e.text,super.open()}setEventListeners(){super.setEventListeners()}}("#preview-image-modal");x.setEventListeners();const $=t=>{const s=new e({id:t._id,isLiked:t.isLiked,name:t.name,link:t.link,handleImageClick:e=>{x.open(e)},handleRemoveCardClick:()=>{const e=s.getId();q.open(),q.setSubmitAction((()=>{q.setLoadingText(!0),b.deleteCard(e).then((e=>{s.handleRemoveCard(e)})).catch((e=>{console.error(e)})).finally((()=>{q.setLoadingText(!1)}))}))},handleLikeIcon:e=>e.getLikeStatus()?b.removeLike(e._id).then((()=>{e.getLikeStatus(!1)})).catch(console.err):b.addLike(e._id).then((()=>{e.getLikeStatus(!0)})).catch(console.err)},"#card-template");return s.getView()},j=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{j.addItem($(e))}},".cards__list"),B=new class{constructor(e,t,s){this._name=e,this._job=t,this._avatar=s}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}setAvatarInfo(e){this._avatar.src=e}}(h,u,c);b.getInitialCards().then((e=>{j.renderItems(e)})),b.usersInfo().then((e=>{B.setUserInfo(e.name,e.about),B.setAvatarInfo(e.avatar)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,