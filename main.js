!function(){"use strict";class e{constructor(e,t){let{id:s,isLiked:r,name:n,link:i,handleImageClick:o,handleRemoveCardClick:a,handleLikeIcon:l}=e;this._id=s,this._name=n,this._link=i,this._isLiked=r,this._cardSelector=t,this._handleImageClick=o,this._handleRemoveCardClick=a,this._handleLikeIcon=l}getId(){return this._id}setLikeStatus(e){this._isLiked=e,this.renderLikes()}getLikeStatus(){return this._isLiked}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon(this)})),this.cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleRemoveCardClick()}))}renderLikes(){this._isLiked?this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active"):this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_active")}handleRemoveCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this.cardImageEl=this._cardElement.querySelector(".card__image"),this.cardTitleEl=this._cardElement.querySelector(".card__title"),this.cardImageEl.src=this._link,this.cardImageEl.alt=`Photo of ${this._name}`,this.cardTitleEl.textContent=this._name,this._setEventListeners(),this.renderLikes(),this._cardElement}}const t={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"popup__error_visible"};class s{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=[...t.querySelectorAll(this._inputSelector)],this._submitButton=t.querySelector(this._submitButtonSelector),this._element=t}_showInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e,document.querySelector(`#${e.id}-error`));this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._element),this.toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){console.log(this),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{console.log(this),"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends r{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setSubmitAction(e){this._handleFormSubmit=e}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e=this._popupForm.querySelectorAll(".form__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const i=document.querySelector("#profile-picture-modal"),o=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#preview-image-modal"),c=document.querySelector(".profile__image"),d=(l.querySelector(".modal__image"),l.querySelector(".modal__title"),document.querySelector("#add-card-modal")),h=document.querySelector(".profile__title"),u=document.querySelector(".profile__description"),_=document.querySelector("#profile-title-input"),m=document.querySelector("#profile-description-input"),p=a.querySelector(".modal__form"),E=d.querySelector(".modal__form"),v=i.querySelector(".modal__form"),L=document.querySelector(".profile__add-button"),S=document.querySelector(".profile__button-avatar"),k=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}usersInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}profileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}userAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this._checkResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7df31549-2772-46fa-8dab-555ea4e32993","Content-Type":"application/json"}}),b=new s(t,E),f=new s(t,p),g=new s(t,v);b.enableValidation(),f.enableValidation(),g.enableValidation();const y=new n("#add-card-modal",(function(e){y.renderLoading(!0),k.addCard(e).then((e=>{const t=w(e);U.addItem(t),y.close()})).catch((e=>{console.error(e)})).finally((()=>{y.renderLoading(!1)}))}));y.setEventListeners(),L.addEventListener("click",(()=>{b.toggleButtonState(),y.open()}));const C=new n("#profile-edit-modal",(function(e){let{name:t,job:s}=e;C.renderLoading(!0),k.profileInfo({name:t,about:s}).then((e=>{$.setUserInfo(e.name,e.about),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.renderLoading(!1)}))}));C.setEventListeners(),o.addEventListener("click",(()=>{const e=$.getUserInfo();_.value=e.name,m.value=e.job,C.open()}));const I=new n("#profile-picture-modal",(function(e){I.renderLoading(!0),k.userAvatar(e).then((()=>{$.setAvatarInfo(e.link),I.close()})).catch((e=>{console.error(e)})).finally((()=>{I.renderLoading(!1)}))}));I.setEventListeners(),S.addEventListener("click",(()=>{I.open(),g.toggleButtonState()}));const q=new n("#remove-card-modal");q.setEventListeners();const B=new class extends r{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._titleElement=this._popupElement.querySelector(".modal__title")}open(e,t){this._imageElement.src=t,this._imageElement.alt=`Photo of ${t}`,this._titleElement.textContent=e,super.open()}}("#preview-image-modal");B.setEventListeners();const w=t=>{const s=new e({id:t._id,isLiked:t.isLiked,name:t.name,link:t.link,handleImageClick:(e,t)=>{B.open(e,t)},handleRemoveCardClick:()=>{const e=s.getId();q.open(),q.setSubmitAction((()=>{q.renderLoading(!0,"Deleting..."),k.deleteCard(e).then((e=>{s.handleRemoveCard(e),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.renderLoading(!1)}))}))},handleLikeIcon:e=>{e.getLikeStatus()?k.removeLike(e._id).then((()=>{e.setLikeStatus(!1)})).catch(console.error):k.addLike(e._id).then((()=>{e.setLikeStatus(!0)})).catch(console.error)}},"#card-template");return s.getView()},U=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{U.addItem(w(e))}},".cards__list"),$=new class{constructor(e,t,s){this._name=e,this._job=t,this._avatar=s}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}setAvatarInfo(e){this._avatar.src=e}}(h,u,c);k.getInitialCards().then((e=>{U.renderItems(e)})).catch((e=>{console.error(e)})),k.usersInfo().then((e=>{$.setUserInfo(e.name,e.about),$.setAvatarInfo(e.avatar)})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFRMkIsR0FHTmxMLEtBQUs2SyxXQUFXTSxRQUFRRCxFQUMxQixHSHFNQSxDQUNFUCxTQUFXTSxJQUNUM0IsRUFBU0MsUUFBUUYsRUFBVzRCLEdBQU0sR0o1THpCLGdCSW1NVGpCLEVBQVcsSUkvTkYsTUFDYjFLLFdBQUFBLENBQVlLLEVBQU1rSyxFQUFLdEIsR0FDckJ2SSxLQUFLRSxNQUFRUCxFQUNiSyxLQUFLb0wsS0FBT3ZCLEVBQ1o3SixLQUFLcUwsUUFBVTlDLENBQ2pCLENBRUEyQixXQUFBQSxHQUNFLE1BQU8sQ0FDTHZLLEtBQU1LLEtBQUtFLE1BQU02QixZQUNqQjhILElBQUs3SixLQUFLb0wsS0FBS3JKLFlBRW5CLENBRUFrSSxXQUFBQSxDQUFZdEssRUFBTWtLLEdBQ2hCN0osS0FBS0UsTUFBTTZCLFlBQWNwQyxFQUN6QkssS0FBS29MLEtBQUtySixZQUFjOEgsQ0FDMUIsQ0FDQU8sYUFBQUEsQ0FBY3hLLEdBQ1pJLEtBQUtxTCxRQUFReEosSUFBTWpDLENBQ3JCLEdKMk00QjhHLEVBQWNDLEVBQW9CSCxHQUVoRVcsRUFDR0ssa0JBQ0FFLE1BQU00RCxJQUNMaEMsRUFBU3dCLFlBQVlRLEVBQU0sSUFFNUI5QixPQUFPQyxJQUNOakYsUUFBUWtGLE1BQU1ELEVBQUksSUFHdEJ0QyxFQUNHZ0IsWUFDQVQsTUFBTXFDLElBQ0xDLEVBQVNDLFlBQVlGLEVBQVNwSyxLQUFNb0ssRUFBU0QsT0FDN0NFLEVBQVNJLGNBQWNMLEVBQVN4QixPQUFPLElBRXhDaUIsT0FBT0MsSUFDTmpGLFFBQVFrRixNQUFNRCxFQUFJLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHtcclxuICAgICAgaWQsXHJcbiAgICAgIGlzTGlrZWQsXHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIGxpbmssXHJcbiAgICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICAgIGhhbmRsZVJlbW92ZUNhcmRDbGljayxcclxuICAgICAgaGFuZGxlTGlrZUljb24sXHJcbiAgICB9LFxyXG4gICAgY2FyZFNlbGVjdG9yXHJcbiAgKSB7XHJcbiAgICAvL2NhcmRTZWxlY3Rvcj0gI2NhcmQtdGVtcGxhdGVcclxuICAgIHRoaXMuX2lkID0gaWQ7XHJcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xyXG4gICAgdGhpcy5faXNMaWtlZCA9IGlzTGlrZWQ7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7IC8vdGVtcGxhdGVcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlUmVtb3ZlQ2FyZENsaWNrID0gaGFuZGxlUmVtb3ZlQ2FyZENsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlTGlrZUljb24gPSBoYW5kbGVMaWtlSWNvbjtcclxuICB9XHJcblxyXG4gIGdldElkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lkO1xyXG4gIH1cclxuXHJcbiAgc2V0TGlrZVN0YXR1cyhzdGF0dXMpIHtcclxuICAgIHRoaXMuX2lzTGlrZWQgPSBzdGF0dXM7XHJcbiAgICB0aGlzLnJlbmRlckxpa2VzKCk7XHJcbiAgfVxyXG5cclxuICBnZXRMaWtlU3RhdHVzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lzTGlrZWQ7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlSWNvbih0aGlzKTtcclxuICAgICAgfSk7XHJcbiAgICB0aGlzLmNhcmRJbWFnZUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL1wiLmNhcmRfX3RyYXNoLWJ1dHRvblwiXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX190cmFzaC1idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlUmVtb3ZlQ2FyZENsaWNrKCk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTGlrZXMoKSB7XHJcbiAgICBpZiAodGhpcy5faXNMaWtlZCkge1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgICAgLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGhhbmRsZVJlbW92ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcclxuICB9XHJcbiAgX2dldEVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICB9XHJcbiAgZ2V0VmlldygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0RWxlbWVudCgpO1xyXG4gICAgdGhpcy5jYXJkSW1hZ2VFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLmNhcmRUaXRsZUVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuICAgIHRoaXMuY2FyZEltYWdlRWwuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuY2FyZEltYWdlRWwuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fbmFtZX1gO1xyXG4gICAgdGhpcy5jYXJkVGl0bGVFbC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAvL2dldCB0aGUgY2FyZCB2aWV3XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5yZW5kZXJMaWtlcygpO1xyXG4gICAgLy8gcmV0dXJuIGNhcmRcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gIH0sXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0b3JzID0ge1xyXG4gIGNhcmRTZWN0aW9uOiBcIi5jYXJkc19fbGlzdFwiLFxyXG4gIGNhcmRUZW1wbGF0ZTogXCIjY2FyZC10ZW1wbGF0ZVwiLFxyXG4gIHByZXZpZXdNb2RhbDogXCIjcHJldmlldy1pbWFnZS1tb2RhbFwiLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuMCIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBjb25maWcuZXJyb3JDbGFzcztcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gW1xuICAgICAgLi4uZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSxcbiAgICBdO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgfVxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKFxuICAgICAgICBpbnB1dEVsZW1lbnQsXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKVxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgfVxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiAhdGhpcy5faW5wdXRFbGVtZW50cy5ldmVyeShcbiAgICAgIChpbnB1dEVsZW1lbnQpID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZFxuICAgICk7XG4gIH1cbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvL2RhdGEgdyBpbiBrZXlib2FyZCBcImtleWRvd25cIlwia2V5dXBcIiBldGNcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQsIHRoaXMuX2VsZW1lbnQpO1xuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgLy9wbGF5cyByb2xsIG9mIGluaXQgbWV0aG9kKHB1YmxpYylcbiAgICB0aGlzLl9lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG4gIG9wZW4oKSB7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzKTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2codGhpcyk7XHJcbiAgICBpZiAoZS5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbFwiKSB8fFxyXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uVGV4dCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIikge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBsb2FkaW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNldFN1Ym1pdEFjdGlvbihoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9XHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dHMgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5mb3JtX19pbnB1dFwiKTtcclxuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcblxyXG4gICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBpbnB1dFZhbHVlcztcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG5cclxuLy9pbmRleC5qc1xyXG4iLCJpbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcclxuXHJcbi8vaW1wb3J0IGFsbCB0aGUgY2xhc3Nlc1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IHsgc2VsZWN0b3JzLCBjb25maWcgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG4vL0VsZW1lbnRzXHJcblxyXG5jb25zdCBwcm9maWxlUGljdHVyZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXBpY3R1cmUtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmNvbnN0IHByZXZpZXdJbWFnZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcmV2aWV3LWltYWdlLW1vZGFsXCIpO1xyXG5jb25zdCBwcm9maWxlUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XHJcbmNvbnN0IHByZXZpZXdJbWFnZSA9IHByZXZpZXdJbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xyXG5jb25zdCBwcmV2aWV3SW1hZ2VNb2RhbFRpdGxlID0gcHJldmlld0ltYWdlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fdGl0bGVcIik7XHJcbmNvbnN0IGFkZENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtbW9kYWxcIik7XHJcbi8vIGNvbnN0IHByb2ZpbGVFZGl0Q2xvc2VCdXR0b24gPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG4vLyBjb25zdCBhZGRDYXJkTW9kYWxDbG9zZUJ1dHRvbiA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuLy8gY29uc3QgcHJldmlld0ltYWdlTW9kYWxDbG9zZUJ1dHRvbiA9XHJcbi8vICAgcHJldmlld0ltYWdlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiXHJcbik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgYWRkQ2FyZEZvcm1FbGVtZW50ID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbmNvbnN0IHByb2ZpbGVQaWN0dXJlRm9ybSA9IHByb2ZpbGVQaWN0dXJlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuLy8gY29uc3QgY2FyZExpc3RFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XHJcbi8vIGNvbnN0IGNhcmRUZW1wbGF0ZSA9XHJcbi8vICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcbmNvbnN0IGFkZE5ld0NhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XHJcbmNvbnN0IGFkZE5ld1BmcEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uLWF2YXRhclwiKTtcclxuLy8gY29uc3QgY2FyZFRpdGxlSW5wdXQgPSBhZGRDYXJkRm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtLWlucHV0LXRpdGxlXCIpO1xyXG4vLyBjb25zdCBjYXJkVXJsSW5wdXQgPSBhZGRDYXJkRm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtLWlucHV0LXVybFwiKTtcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcIjdkZjMxNTQ5LTI3NzItNDZmYS04ZGFiLTU1NWVhNGUzMjk5M1wiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdCh7IG5hbWUsIGpvYiB9KSB7XHJcbiAgZWRpdENhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLnByb2ZpbGVJbmZvKHsgbmFtZSwgYWJvdXQ6IGpvYiB9KVxyXG4gICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHVzZXJEYXRhLm5hbWUsIHVzZXJEYXRhLmFib3V0KTtcclxuICAgICAgZWRpdENhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGVkaXRDYXJkUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIG5ld0NhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLmFkZENhcmQoaW5wdXRWYWx1ZXMpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKHJlcyk7XHJcbiAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRBdmF0YXJTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBuZXdQcm9maWxlUGljdHVyZVBvcHVwLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAudXNlckF2YXRhcihpbnB1dFZhbHVlcylcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0QXZhdGFySW5mbyhpbnB1dFZhbHVlcy5saW5rKTtcclxuICAgICAgbmV3UHJvZmlsZVBpY3R1cmVQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIG5ld1Byb2ZpbGVQaWN0dXJlUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufVxyXG4vLyBmdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKGRhdGEpIHtcclxuLy8gICBwcmV2aWV3SW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xyXG4vLyAgIHByZXZpZXdJbWFnZS5hbHQgPSBgUGhvdG8gb2YgJHtkYXRhLm5hbWV9YDtcclxuLy8gIHByZXZpZXdJbWFnZU1vZGFsVGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbi8vICAgY2FyZFByZXZpZXdNb2RhbC5vcGVuKCk7XHJcbi8vIH1cclxuXHJcbi8vbmV3IGluc3RhbmNlc1xyXG5cclxuLy9mb3JtIHZhbGlkYXRpb24gaW5zdGFuY2VcclxuY29uc3QgYWRkQ2FyZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgYWRkQ2FyZEZvcm1FbGVtZW50KTtcclxuY29uc3QgYWRkRWRpdFByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHByb2ZpbGVFZGl0Rm9ybSk7XHJcbmNvbnN0IGFkZFBmcFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcHJvZmlsZVBpY3R1cmVGb3JtKTtcclxuYWRkQ2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmFkZEVkaXRQcm9maWxlVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYWRkUGZwVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuLy9uZXcgY2FyZCBpbnN0YW5jZVxyXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNhZGQtY2FyZC1tb2RhbFwiLFxyXG4gIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0XHJcbik7XHJcblxyXG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGFkZENhcmRWYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICBuZXdDYXJkUG9wdXAub3BlbigpO1xyXG59KTtcclxuLy9lZGl0IGNhcmRzIGluc3RhY2VcclxuY29uc3QgZWRpdENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxyXG4gIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0XHJcbik7XHJcblxyXG5lZGl0Q2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHVzZXJEYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHVzZXJEYXRhLm5hbWU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyRGF0YS5qb2I7XHJcbiAgZWRpdENhcmRQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG4vL25ldyBwZnAgaW5zdGFuY2VcclxuY29uc3QgbmV3UHJvZmlsZVBpY3R1cmVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtcGljdHVyZS1tb2RhbFwiLFxyXG4gIGhhbmRsZUFkZEF2YXRhclN1Ym1pdFxyXG4pO1xyXG5uZXdQcm9maWxlUGljdHVyZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5hZGROZXdQZnBCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBuZXdQcm9maWxlUGljdHVyZVBvcHVwLm9wZW4oKTtcclxuICBhZGRQZnBWYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxufSk7XHJcbi8vcmVtb3ZlIGNhcmQgaW5zdGFuY2VcclxuY29uc3QgcmVtb3ZlQ2FyZE1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjcmVtb3ZlLWNhcmQtbW9kYWxcIik7XHJcblxyXG5yZW1vdmVDYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuLy9wcmV2aWV3IGltYWdlIGluc3RhbmNlXHJcbmNvbnN0IGNhcmRQcmV2aWV3TW9kYWwgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLnByZXZpZXdNb2RhbCk7XHJcbmNhcmRQcmV2aWV3TW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGNyZWF0ZUNhcmQgPSAoZGF0YSkgPT4ge1xyXG4gIGNvbnN0IGNhcmRFbCA9IG5ldyBDYXJkKFxyXG4gICAge1xyXG4gICAgICBpZDogZGF0YS5faWQsXHJcbiAgICAgIGlzTGlrZWQ6IGRhdGEuaXNMaWtlZCxcclxuICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICBsaW5rOiBkYXRhLmxpbmssXHJcbiAgICAgIGhhbmRsZUltYWdlQ2xpY2s6IChuYW1lLCBsaW5rKSA9PiB7XHJcbiAgICAgICAgY2FyZFByZXZpZXdNb2RhbC5vcGVuKG5hbWUsIGxpbmspO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgaGFuZGxlUmVtb3ZlQ2FyZENsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaWQgPSBjYXJkRWwuZ2V0SWQoKTtcclxuICAgICAgICByZW1vdmVDYXJkTW9kYWwub3BlbigpO1xyXG5cclxuICAgICAgICByZW1vdmVDYXJkTW9kYWwuc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcclxuICAgICAgICAgIHJlbW92ZUNhcmRNb2RhbC5yZW5kZXJMb2FkaW5nKHRydWUsIFwiRGVsZXRpbmcuLi5cIik7XHJcbiAgICAgICAgICBhcGlcclxuICAgICAgICAgICAgLmRlbGV0ZUNhcmQoaWQpXHJcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICBjYXJkRWwuaGFuZGxlUmVtb3ZlQ2FyZChyZXMpO1xyXG4gICAgICAgICAgICAgIHJlbW92ZUNhcmRNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJlbW92ZUNhcmRNb2RhbC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGhhbmRsZUxpa2VJY29uOiAoY2FyZCkgPT4ge1xyXG4gICAgICAgIGlmICghY2FyZC5nZXRMaWtlU3RhdHVzKCkpIHtcclxuICAgICAgICAgIGFwaVxyXG4gICAgICAgICAgICAuYWRkTGlrZShjYXJkLl9pZClcclxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGNhcmQuc2V0TGlrZVN0YXR1cyh0cnVlKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcGlcclxuICAgICAgICAgICAgLnJlbW92ZUxpa2UoY2FyZC5faWQpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICBjYXJkLnNldExpa2VTdGF0dXMoZmFsc2UpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHNlbGVjdG9ycy5jYXJkVGVtcGxhdGVcclxuICApO1xyXG5cclxuICByZXR1cm4gY2FyZEVsLmdldFZpZXcoKTtcclxufTtcclxuLy8gc2VjdGlvbiBpbnN0YW5jZVxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgICBjYXJkTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQoaXRlbSkpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIHNlbGVjdG9ycy5jYXJkU2VjdGlvblxyXG4pO1xyXG5cclxuLy91c2VyaW5mbyBpbnN0YW5jZVxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhwcm9maWxlVGl0bGUsIHByb2ZpbGVEZXNjcmlwdGlvbiwgcHJvZmlsZVBpY3R1cmUpO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKGNhcmRzKSA9PiB7XHJcbiAgICBjYXJkTGlzdC5yZW5kZXJJdGVtcyhjYXJkcyk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH0pO1xyXG5cclxuYXBpXHJcbiAgLnVzZXJzSW5mbygpXHJcbiAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YS5uYW1lLCB1c2VyRGF0YS5hYm91dCk7XHJcbiAgICB1c2VySW5mby5zZXRBdmF0YXJJbmZvKHVzZXJEYXRhLmF2YXRhcik7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH0pO1xyXG5cclxuLy8gZmV0Y2goXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS91c2Vycy9tZVwiLCB7XHJcbi8vICAgLy8gbWV0aG9kOiBcIlBBVENIXCIsXHJcbi8vICAgaGVhZGVyczoge1xyXG4vLyAgICAgYXV0aG9yaXphdGlvbjogXCI3ZGYzMTU0OS0yNzcyLTQ2ZmEtOGRhYi01NTVlYTRlMzI5OTNcIixcclxuLy8gICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4vLyAgIH0sXHJcbi8vIH0pXHJcbi8vICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcclxuLy8gICAudGhlbigocmVzdWx0KSA9PiB7XHJcbi8vICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4vLyAgIH0pO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuICAvLyBmZXRjaCBieSBpdHNlbGYgPSBHRVQgbWV0aG9kIGF1dG9tYXRpY2FsbHlcclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgYWRkQ2FyZChpbnB1dFZhbHVlcykge1xyXG4gICAgLy8gdGhlIGlucHV0VmFsdWVzIGlzIHBhc3NlZCBmcm9tIGluZGV4LmpzIGFuZCB5b3UgcHV0IHRoZXNlIGluIHRoZSBib2R5IG9mIHlvdXIgZmV0Y2ggcmVxdWVzdFxyXG4gICAgLy8gcHV0IHlvdXIgZmV0Y2ggcmVxdWVzdCBoZXJlXHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBpbnB1dFZhbHVlcy5uYW1lLFxyXG4gICAgICAgIGxpbms6IGlucHV0VmFsdWVzLmxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1c2Vyc0luZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7IGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMgfSkudGhlbihcclxuICAgICAgdGhpcy5fY2hlY2tSZXNwb25zZVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHByb2ZpbGVJbmZvKGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcblxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG5cclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgdXNlckF2YXRhcihpbnB1dFZhbHVlcykge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IGlucHV0VmFsdWVzLmxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcbiAgYWRkTGlrZShjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgIHJldHVybiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl90aXRsZUVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fdGl0bGVcIik7XHJcbiAgfVxyXG4gIG9wZW4obmFtZSwgbGluaykge1xyXG4gICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gYFBob3RvIG9mICR7bGlua31gO1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcclxuICAgIC8vdXNlIHRoaXMuX3JlbmRlcmVyIHRvIGNyZWF0ZSBlbGVtZW50cyBmb3IgcmVuZGVyaW5nXHJcbiAgICBpdGVtcy5yZXZlcnNlKCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICAvL3Rha2UgaXRlbXMgYW5kIHJlbmRlciBpdCBpbnRvIHRoaXMuX2VsZW1lbnRcclxuXHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWUsIGpvYiwgYXZhdGFyKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYiA9IGpvYjtcclxuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgam9iOiB0aGlzLl9qb2IudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8obmFtZSwgam9iKSB7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGpvYjtcclxuICB9XHJcbiAgc2V0QXZhdGFySW5mbyhsaW5rKSB7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gbGluaztcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJjYXJkU2VsZWN0b3IiLCJpZCIsImlzTGlrZWQiLCJuYW1lIiwibGluayIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVSZW1vdmVDYXJkQ2xpY2siLCJoYW5kbGVMaWtlSWNvbiIsInRoaXMiLCJfaWQiLCJfbmFtZSIsIl9saW5rIiwiX2lzTGlrZWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlUmVtb3ZlQ2FyZENsaWNrIiwiX2hhbmRsZUxpa2VJY29uIiwiZ2V0SWQiLCJzZXRMaWtlU3RhdHVzIiwic3RhdHVzIiwicmVuZGVyTGlrZXMiLCJnZXRMaWtlU3RhdHVzIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2NhcmRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYXJkSW1hZ2VFbCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImhhbmRsZVJlbW92ZUNhcmQiLCJfZ2V0RWxlbWVudCIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImdldFZpZXciLCJjYXJkVGl0bGVFbCIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiY29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiX2lucHV0RWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvbiIsIl9lbGVtZW50IiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJldmVyeSIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiZGlzYWJsZWQiLCJmb3JFYWNoIiwiZW5hYmxlVmFsaWRhdGlvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwib3BlbiIsImNvbnNvbGUiLCJsb2ciLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsImV2dCIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3BvcHVwRm9ybSIsIl9zdWJtaXRCdXR0b25UZXh0IiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic2V0U3VibWl0QWN0aW9uIiwicmVzZXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcm9maWxlUGljdHVyZU1vZGFsIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlRWRpdE1vZGFsIiwicHJldmlld0ltYWdlTW9kYWwiLCJwcm9maWxlUGljdHVyZSIsImFkZENhcmRNb2RhbCIsInByb2ZpbGVUaXRsZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlRWRpdEZvcm0iLCJhZGRDYXJkRm9ybUVsZW1lbnQiLCJwcm9maWxlUGljdHVyZUZvcm0iLCJhZGROZXdDYXJkQnV0dG9uIiwiYWRkTmV3UGZwQnV0dG9uIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhZGRDYXJkIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkZWxldGVDYXJkIiwiY2FyZElkIiwidXNlcnNJbmZvIiwicHJvZmlsZUluZm8iLCJkYXRhIiwidXNlckF2YXRhciIsImF2YXRhciIsImFkZExpa2UiLCJyZW1vdmVMaWtlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsImF1dGhvcml6YXRpb24iLCJhZGRDYXJkVmFsaWRhdG9yIiwiYWRkRWRpdFByb2ZpbGVWYWxpZGF0b3IiLCJhZGRQZnBWYWxpZGF0b3IiLCJuZXdDYXJkUG9wdXAiLCJjYXJkIiwiY3JlYXRlQ2FyZCIsImNhcmRMaXN0IiwiYWRkSXRlbSIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJmaW5hbGx5IiwiZWRpdENhcmRQb3B1cCIsImpvYiIsImFib3V0IiwidXNlckRhdGEiLCJ1c2VySW5mbyIsInNldFVzZXJJbmZvIiwiZ2V0VXNlckluZm8iLCJuZXdQcm9maWxlUGljdHVyZVBvcHVwIiwic2V0QXZhdGFySW5mbyIsInJlbW92ZUNhcmRNb2RhbCIsImNhcmRQcmV2aWV3TW9kYWwiLCJfaW1hZ2VFbGVtZW50IiwiX3RpdGxlRWxlbWVudCIsImNhcmRFbCIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJpdGVtcyIsInJldmVyc2UiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJfam9iIiwiX2F2YXRhciIsImNhcmRzIl0sInNvdXJjZVJvb3QiOiIifQ==