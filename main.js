!function(){"use strict";class e{constructor(e,t){let{name:s,link:n,handleImageClick:o}=e;this._name=s,this._link=n,this._cardSelector=t,this._handleImageClick=o}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this.cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleRemoveCard()}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleRemoveCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this.cardImageEl=this._cardElement.querySelector(".card__image"),this.cardTitleEl=this._cardElement.querySelector(".card__title"),this.cardImageEl.src=this._link,this.cardImageEl.alt=`Photo of ${this._name}`,this.cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}const t=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],s={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"popup__error_visible"};class n{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=[...t.querySelectorAll(this._inputSelector)],this._submitButton=t.querySelector(this._submitButtonSelector),this._element=t}_showInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._element.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e,document.querySelector(`#${e.id}-error`));this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e,this._element),this.toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){console.log(this),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{console.log(this),"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class r extends o{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form")}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e=this._popupForm.querySelectorAll(".form__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}const i=document.querySelector("#profile-edit-button"),l=document.querySelector("#profile-edit-modal"),a=document.querySelector("#preview-image-modal"),c=(a.querySelector(".modal__image"),a.querySelector(".modal__title"),document.querySelector("#add-card-modal")),u=document.querySelector(".profile__title"),d=document.querySelector(".profile__description"),m=document.querySelector("#profile-title-input"),_=document.querySelector("#profile-description-input"),h=l.querySelector(".modal__form"),p=c.querySelector(".modal__form"),E=document.querySelector(".profile__add-button"),v=new n(s,p),g=new n(s,h);v.enableValidation(),g.enableValidation();const S=new r("#add-card-modal",(function(e){const t=k(e);b.addItem(t),p.reset(),S.close()}));S.setEventListeners(),E.addEventListener("click",(()=>{v.toggleButtonState(),S.open()}));const y=new r("#profile-edit-modal",(function(e){let{name:t,job:s}=e;f.setUserInfo(t,s),y.close()}));y.setEventListeners(),i.addEventListener("click",(()=>{const e=f.getUserInfo();m.value=e.name,_.value=e.job,y.open()}));const L=new class extends o{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._titleElement=this._popupElement.querySelector(".modal__title")}open(e){this._imageElement.src=e.link,this._imageElement.alt=`Photo of ${e.link}`,this._titleElement.textContent=e.text,super.open()}setEventListeners(){super.setEventListeners()}}("#preview-image-modal");L.setEventListeners();const k=t=>new e({name:t.name,link:t.link,handleImageClick:e=>{L.open(e)}},"#card-template").getView(),b=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:t,renderer:e=>{b.addItem(k(e))}},".cards__list");b.renderItems(t);const f=new class{constructor(e,t){this._name=e,this._job=t}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}}(u,d)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,